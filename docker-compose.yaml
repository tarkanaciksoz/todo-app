version: '3.9'
services:
  frontend:
    container_name: todo-app-frontend
    build:
      context: ./front-end/
      args:
        - ENV=${APP_ENV}
    depends_on:
      - backend
    restart: unless-stopped
    environment:
      ENV: ${APP_ENV}
    healthcheck:
      test: curl --fail ${APP_URL} || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    networks:
      - todo-app
    links:
      - backend
    ports:
      - 80:80

  backend:
    container_name: todo-app-backend
    build:
      context: .
      args:
        - ENV=${APP_ENV}
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    environment:
      ENV: ${APP_ENV}
      WAIT_HOSTS: mysql:3306
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECT_TIMEOUT: 30
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: curl --fail ${API_URL} || exit 1
      interval: 60s
      retries: 10
      start_period: 20s
      timeout: 10s
    networks:
      - todo-app
    links:
      - mysql
    ports:
      - 9090:9090

  mysql:
    container_name: todo-app-mysql
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: mysqladmin ping -h localhost -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 2s
      timeout: 20s
      retries: 10
    volumes:
      - ./docker/create-local-db:/docker-entrypoint-initdb.d
    networks:
      - todo-app
    ports:
      - 3306:3306

networks:
  todo-app:
    name: todo-app
    driver: bridge